import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'

    group 'eu.koboo.atcommand'
    version "$projectVersion"

    repositories {
        mavenCentral()
        maven {
            name 'bungeecord-repo'
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
            name 'spigot-repo'
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    }

    compileJava.options.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    processResources {
        filter ReplaceTokens, tokens: [
                "PROJECT_VERSION": "$projectVersion".toString(),
                "PROJECT_NAME"   : project.name.toString(),
                "PLUGIN_AUTHOR"  : "$pluginAuthor".toString(),
                "PLUGIN_MAIN"    : "$pluginMain".toString()
        ]
    }

    task buildPlugin(type: Copy) {
        if (project.name.equalsIgnoreCase("core")) {
            return;
        }
        var outputDir = rootProject.projectDir.getAbsolutePath() + "/output/"
        var targetName = project.name + "-${projectVersion}-all.jar"
        var finalName = "at-command-" + targetName
        // Delete previous build jar
        delete outputDir + finalName

        // Copy current build jar
        from 'build/libs/'
        into outputDir

        include targetName
        rename { String fileName ->
            fileName.replace(targetName, finalName)
        }
    }
    shadowJar.finalizedBy buildPlugin

    task deleteOutput() {
        delete rootProject.projectDir.getAbsolutePath() + "/output"
    }
    clean.finalizedBy deleteOutput

    publishing {
        repositories {
            maven {
                url = 'https://reposilite.koboo.eu/releases'
                credentials {
                    username = System.getenv('REPO_USER')
                    password = System.getenv('REPO_TOKEN')
                }
            }
        }
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }
}